{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text","style","marginTop","placeholder","onChange","name","ref","onClick","Todo","todos","removeTodo","updateTodo","setEdit","map","todo","index","className","isComplete","key","TodoList","setTodos","newTodos","console","log","removedArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OA2DeA,MAzDf,SAAkBC,GAAQ,IAAD,EACGC,mBAASD,EAAME,KAAOF,EAAME,KAAKC,MAAQ,IAD5C,mBAChBC,EADgB,KACTC,EADS,KAGjBC,EAAWC,iBAAO,MAExBC,qBAAU,WACRF,EAASG,QAAQC,WAGnB,IAAMC,EAAe,SAAAC,GACnBP,EAASO,EAAEC,OAAOV,QAGdW,EAAe,SAAAF,GACnBA,EAAEG,iBAEFf,EAAMgB,SAAS,CACbC,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMjB,IAERC,EAAS,KAGX,OACE,0BAAMW,SAAUF,GACbd,EAAME,KACL,oCACE,2BACEoB,MAAO,CAACC,UAAW,QACnBC,YAAY,cACZrB,MAAOC,EACPqB,SAAUd,EACVe,KAAK,OACLC,IAAKrB,IAEP,4BAAQsB,QAASd,GAAjB,WAKF,oCACE,2BACEU,YAAY,WACZrB,MAAOC,EACPqB,SAAUd,EACVe,KAAK,OACLC,IAAKrB,IAEP,4BAAQsB,QAASd,GAAjB,e,cCLKe,EAxCF,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WAAiB,EAC1B/B,mBAAS,CAC/BgB,GAAI,KACJd,MAAO,KAHyC,mBAC3CD,EAD2C,KACrC+B,EADqC,KAclD,OAAI/B,EAAKe,GACA,kBAAC,EAAD,CAAUf,KAAMA,EAAMc,SATV,SAAAb,GACnB6B,EAAW9B,EAAKe,GAAId,GACpB8B,EAAQ,CACNhB,GAAI,KACJd,MAAO,QAQJ2B,EAAMI,KAAI,SAACC,EAAMC,GAAP,OACf,yBACEC,UAAWF,EAAKG,WAAa,oBAAsB,WACnDC,IAAKH,GAEL,yBAAKG,IAAKJ,EAAKlB,IACZkB,EAAKd,MAER,yBAAKgB,UAAU,SACb,kBAAC,IAAD,CACET,QAAS,kBAAMG,EAAWI,EAAKlB,KAC/BoB,UAAU,gBAEZ,kBAAC,IAAD,CACET,QAAS,kBAAMK,EAAQ,CAAEhB,GAAIkB,EAAKlB,GAAId,MAAOgC,EAAKd,QAClDgB,UAAU,oBCALG,MAlCf,WAAqB,IAAD,EACQvC,mBAAS,IADjB,mBACX6B,EADW,KACJW,EADI,KAqBlB,OACE,oCACE,0CACA,kBAAC,EAAD,CAAUzB,SArBE,SAAAmB,GAAS,IAAD,EAEhBO,EAAQ,CAAIP,GAAJ,mBAAaL,IAE3BW,EAASC,IACT,EAAAC,SAAQC,IAAR,oBAAed,OAiBb,kBAAC,EAAD,CACEA,MAAOA,EACPC,WAZa,SAAAd,GACjB,IAAM4B,EAAa,YAAIf,GAAOgB,QAAO,SAAAX,GAAI,OAAIA,EAAKlB,KAAOA,KAEzDwB,EAASI,IAULb,WAjBa,SAACe,EAAQC,GAC1BP,GAAS,SAAAQ,GAAI,OAAIA,EAAKf,KAAI,SAAAgB,GAAI,OAAKA,EAAKjC,KAAO8B,EAASC,EAAWE,aCJxDC,MARf,WACE,OACE,yBAAKd,UAAU,YACb,kBAAC,EAAD,QCHNe,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.d83eb5ab.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nfunction TodoForm(props) {\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} >\n      {props.edit ? (\n        <>\n          <input\n            style={{marginTop: \"20px\"}}\n            placeholder='Update item'\n            value={input}\n            onChange={handleChange}\n            name='text'\n            ref={inputRef}\n          />\n          <button onClick={handleSubmit} >\n            Update\n          </button>\n        </>\n      ) : (\n        <>\n          <input\n            placeholder='Add Item'\n            value={input}\n            onChange={handleChange}\n            name='text'\n            ref={inputRef}\n          />\n          <button onClick={handleSubmit} >\n            Add todo\n          </button>\n        </>\n      )}\n    </form>\n  );\n}\n\nexport default TodoForm;\n","import React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\n\nconst Todo = ({ todos, removeTodo, updateTodo }) => {\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n\n  const submitUpdate = value => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n  };\n\n  if (edit.id) {\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\n  }\n\n  return todos.map((todo, index) => (\n    <div\n      className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\n      key={index}\n    >\n      <div key={todo.id} >\n        {todo.text}\n      </div>\n      <div className='icons'>\n        <RiCloseCircleLine\n          onClick={() => removeTodo(todo.id)}\n          className='delete-icon'\n        />\n        <TiEdit\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\n          className='edit-icon'\n        />\n      </div>\n    </div>\n  ));\n};\n\nexport default Todo;\n","import React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = todo => {\n\n    const newTodos = [todo, ...todos];\n\n    setTodos(newTodos);\n    console.log(...todos);\n  };\n\n  const updateTodo = (todoId, newValue) => {\n    setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\n  };\n\n  const removeTodo = id => {\n    const removedArr = [...todos].filter(todo => todo.id !== id);\n\n    setTodos(removedArr);\n  };\n\n  return (\n    <>\n      <h1>TO DO LIST</h1>\n      <TodoForm onSubmit={addTodo} />\n      <Todo\n        todos={todos}\n        removeTodo={removeTodo}\n        updateTodo={updateTodo}\n      />\n    </>\n  );\n}\n\nexport default TodoList;\n","import React from 'react';\nimport './App.css';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className='todo-app'>\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}